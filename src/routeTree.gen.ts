/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AdministratorImport } from './routes/administrator'
import { Route as AuthImport } from './routes/_auth'
import { Route as AdminImport } from './routes/_admin'
import { Route as IndexImport } from './routes/index'
import { Route as AuthStatsImport } from './routes/_auth.stats'
import { Route as AuthProfileImport } from './routes/_auth.profile'
import { Route as AuthGamesImport } from './routes/_auth.games'
import { Route as AuthAchievementsImport } from './routes/_auth.achievements'
import { Route as AdminHostedImport } from './routes/_admin.hosted'
import { Route as AdminCreateGameImport } from './routes/_admin.create-game'
import { Route as AuthPlayIdImport } from './routes/_auth.play.$id'
import { Route as AdminGameIdImport } from './routes/_admin.game.$id'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AdministratorRoute = AdministratorImport.update({
  path: '/administrator',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/_admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthStatsRoute = AuthStatsImport.update({
  path: '/stats',
  getParentRoute: () => AuthRoute,
} as any)

const AuthProfileRoute = AuthProfileImport.update({
  path: '/profile',
  getParentRoute: () => AuthRoute,
} as any)

const AuthGamesRoute = AuthGamesImport.update({
  path: '/games',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAchievementsRoute = AuthAchievementsImport.update({
  path: '/achievements',
  getParentRoute: () => AuthRoute,
} as any)

const AdminHostedRoute = AdminHostedImport.update({
  path: '/hosted',
  getParentRoute: () => AdminRoute,
} as any)

const AdminCreateGameRoute = AdminCreateGameImport.update({
  path: '/create-game',
  getParentRoute: () => AdminRoute,
} as any)

const AuthPlayIdRoute = AuthPlayIdImport.update({
  path: '/play/$id',
  getParentRoute: () => AuthRoute,
} as any)

const AdminGameIdRoute = AdminGameIdImport.update({
  path: '/game/$id',
  getParentRoute: () => AdminRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_admin': {
      id: '/_admin'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/administrator': {
      id: '/administrator'
      path: '/administrator'
      fullPath: '/administrator'
      preLoaderRoute: typeof AdministratorImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_admin/create-game': {
      id: '/_admin/create-game'
      path: '/create-game'
      fullPath: '/create-game'
      preLoaderRoute: typeof AdminCreateGameImport
      parentRoute: typeof AdminImport
    }
    '/_admin/hosted': {
      id: '/_admin/hosted'
      path: '/hosted'
      fullPath: '/hosted'
      preLoaderRoute: typeof AdminHostedImport
      parentRoute: typeof AdminImport
    }
    '/_auth/achievements': {
      id: '/_auth/achievements'
      path: '/achievements'
      fullPath: '/achievements'
      preLoaderRoute: typeof AuthAchievementsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/games': {
      id: '/_auth/games'
      path: '/games'
      fullPath: '/games'
      preLoaderRoute: typeof AuthGamesImport
      parentRoute: typeof AuthImport
    }
    '/_auth/profile': {
      id: '/_auth/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof AuthProfileImport
      parentRoute: typeof AuthImport
    }
    '/_auth/stats': {
      id: '/_auth/stats'
      path: '/stats'
      fullPath: '/stats'
      preLoaderRoute: typeof AuthStatsImport
      parentRoute: typeof AuthImport
    }
    '/_admin/game/$id': {
      id: '/_admin/game/$id'
      path: '/game/$id'
      fullPath: '/game/$id'
      preLoaderRoute: typeof AdminGameIdImport
      parentRoute: typeof AdminImport
    }
    '/_auth/play/$id': {
      id: '/_auth/play/$id'
      path: '/play/$id'
      fullPath: '/play/$id'
      preLoaderRoute: typeof AuthPlayIdImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AdminRoute: AdminRoute.addChildren({
    AdminCreateGameRoute,
    AdminHostedRoute,
    AdminGameIdRoute,
  }),
  AuthRoute: AuthRoute.addChildren({
    AuthAchievementsRoute,
    AuthGamesRoute,
    AuthProfileRoute,
    AuthStatsRoute,
    AuthPlayIdRoute,
  }),
  AdministratorRoute,
  LoginRoute,
})

/* prettier-ignore-end */
